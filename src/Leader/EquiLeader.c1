#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int solution(int A[], int N)
{
    if (N == 1) return 0;
    // Return the number of equi leaders in the array A
    int equiNo = 0; //number of equi leaders found
    
    // Initialization
    int stSiz = 0;
    int leadCand = 0;
    int count;
    int index; // array separating index
    
    // first iteration
    leadCand = A[0];
    stSiz = 1;
    index = 0;
    count = 0; 
    for (int i = index+1; i < N; i++) if (A[i] == leadCand) count++;
    if ( count > ((N - 1) - index)/2 ) equiNo++;
    
    // next iterations
    for (index = 1; index < N -1; index++)
    {
        // find candidate in the left side of the array
        if (stSiz == 0)
        {
            leadCand = A[index];
            stSiz++;
        }
        else
        {
            if (leadCand == A[index]) stSiz++;
            else stSiz--;
        }
        
        // Checek if a candidate is a leader in the left side of the array
        if (stSiz > 0)
        {
            count = 0;
            for (int i = 0; i <= index; i++) if (A[i] == leadCand) count++;
            if (count > (index+1)/2 ) 
            {
                // Check if a candidate is a leader in the right side of the array
                count = 0;
                for (int i = index+1; i < N; i++) if (A[i] == leadCand) count++;
                if ( count > ((N - 1) - index)/2 ) equiNo++;
            }
            
        }
    }

    return equiNo;
}

int main()
{
    return 0;
}


