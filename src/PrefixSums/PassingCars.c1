#include <stdio.h>
#include <stdlib.h>

int solution( int [], int );

int main()
{
    int** tests = malloc(4*sizeof(int*));
    int t1[] = {0,1,0,1,1};
    int t2[] = {1,1,1,1,1};
    int t3[] = {0,0,0,0,1};
    int t4[] = {0};
    tests[0] = t1; tests[1] = t2; tests[2] = t3; tests[3] = t4;
    int N[] = {5,5,5,1};
    for (int i = 0 ; i < sizeof(N)/sizeof(N[0]); i++)
        printf("result of test %d is %d \n", i, solution(tests[i],N[i]));

    return 0;
}


int solution( int  A[], int N)
{
    if (N> 1000000000) return -1;
    int* suffSum = calloc(N, sizeof(int));
    suffSum[N-1] = A[N-1];
    for (int i = N - 2 ; i >= 0; i--)
    {
        suffSum[i] = suffSum[i+1] + A[i];
    }
    int result = 0;
    for (int i = 0 ; i < N - 1 ; i++)
    {
        if (A[i] == 0)
        {
            result += suffSum[i];
            if (result > 1000000000) return -1;
        }
    }
    return result;
}

     




    
